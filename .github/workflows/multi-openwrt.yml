#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Multi-OpenWrt Images

env:
  PREFIX_URL: https://storage.openwrt.cc/snapshots/targets

on:
  workflow_dispatch:
    inputs:
      INPUT_TARGET:
        description: "Target to build (platform/target/subtarget)"
        required: false
        default: "all"
  push:
    paths: 
      - '.github/workflows/multi-openwrt.yml'

jobs:
  Config:
    name: Generate Config
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.find-targets.outputs.TARGETS }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Find Targets
        id: find-targets
        env:
          INPUT_TARGET: ${{ github.event.inputs.INPUT_TARGET }}
        run: |
          if [ "$INPUT_TARGET" = "all" ] || [ "$INPUT_TARGET" = "" ]; then
            export TARGETS="$(cat config/openwrt.config)"
          else
            export TARGETS="$INPUT_TARGET"
          fi
          ## TARGETS="arm_cortex-a9_vfpv3-d16/mvebu/cortexa9/linux-arm-v7 i386_pentium4/x86/generic/linux-386/386 x86_64/x86/64/linux-amd64/amd64"
          echo -e "\033[31m INPUT_TARGET=${INPUT_TARGETT} \033[0m"
          echo -e "\033[31m TARGETS=${INPUT_TARGET} \033[0m"
          echo -e "\033[31m INPUT_TARGET: \033[0m $INPUT_TARGET"
          echo -e "\033[31m TARGETS:  $TARGETS \033[0m"
          ## cat config/platform.config
          
          JSON='{"config": ["default"], "targets":['
          FIRST=1
          for TARGET in $TARGETS; do
            echo -e "\033[31m FIRST: $FIRST \033[0m"
            [[ $FIRST -ne 1 ]] && JSON="$JSON"','
            echo -e "\033[31m JSON1: $JSON \033[0m"
            JSON="$JSON"'"'"${TARGET}"'"'
            echo -e "\033[31m JSON2: $JSON \033[0m"
            FIRST=0
          done
          JSON="$JSON"']}'
          echo $JSON
          echo "::set-output name=TARGETS::$JSON"

  Mulit-Images:
    name: ${{ matrix.TARGETS }}
    needs: [Config]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # 
      matrix: ${{fromJson(needs.Config.outputs.TARGETS)}}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sleep 1s

      - name: Generate Variables
        id: env
        run: |
          export CONFIG=$(echo ${{ matrix.TARGETS }} | awk -F '/' '{print $1}')
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          export GITHUB_URL=$(echo ${{ matrix.TARGETS }} | awk -F '/' '{print $2}')
          echo "GITHUB_URL=GITHUB_URL" >> $GITHUB_ENV
          export DIY_P1_SH=$(echo ${{ matrix.TARGETS }} | awk -F '/' '{print $3}')
          echo "DIY_P1_SH=$DIY_P1_SH" >> $GITHUB_ENV
          export DIY_P2_SH=$(echo ${{ matrix.TARGETS }} | awk -F '/' '{print $4}' | sed 's/-/\//g')
          echo "DIY_P2_SH=$DIY_P2_SH" >> $GITHUB_ENV
          export ORTHER=$(echo ${{ matrix.TARGETS }} | awk -F '/' '{print $5}')
          echo "ORTHER=$ORTHER" >> $GITHUB_ENV
          
          echo -e "\033[31m DEVICE_PLATFORM:  $DEVICE_PLATFORM \033[0m"
          echo -e "\033[31m DEVICE_TARGET:  $DEVICE_TARGET \033[0m"
          echo -e "\033[31m DEVICE_SUBTARGET:  $DEVICE_SUBTARGET \033[0m"
          echo -e "\033[31m DOCKER_IMAGE_ARCH:  $DOCKER_IMAGE_ARCH  \033[0m"
          echo -e "\033[31m DOCKER_EXTERA_TAG:  $DOCKER_EXTERA_TAG  \033[0m"
          
          echo "matrix.TARGETS: ${{ matrix.TARGETS }}"
          
          
          
          
          
          
          
          
          
          
          
          
          
